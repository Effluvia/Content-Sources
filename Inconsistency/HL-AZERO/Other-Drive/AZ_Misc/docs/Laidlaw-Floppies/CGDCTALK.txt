When I started working at Valve, Half-Life was almost finished. It would be on sale for Christmas. If I was lucky, I would get to put in a few weeks of touch-up work on the story, and then get on with a far more detailed storyline for our second game. That was in July of 1997.

Yesterday afternoon, just as the sun was setting on Kirkland, Gabe Newell took a crowbar to a headcrab pinata which had been dangling in Valve’s main room for several weeks like the headcrab of Damocles, waiting for Half-Life to go gold. As rubber bugs and monopoly money sprayed the room, I knew that I was finally finished working on the story for Half-Life.

Between July 1, 1997 and November 8, 1998, it seems to me that every day has been somehow occupied by Half-Life. I’m sure this is an exaggeration—but not much of one. If my memories are distorted, it’s because the world of Half-Life created such an intense and powerful gravity well that everything that came anywhere near it was inexorably drawn in until it was bent beyond recognition. I know the game put me through quite a few twists and turns before it was finished, and I can only hope it does the same for its audience.

Half-Life in the summer of ‘97 bore only superficial resemblance to the Half-Life that just went gold. There was a storyline in the spec involving an accident at a decommissioned missile base, a dimensional portal experiment, lots of smart alien and human enemies, and a bonus trip to an alien world. But when I looked at the game itself, it was not terribly obvious where or how this story was ever going to get told. My first detailed view of the game reminded me in literary terms of a shared world anthology. In a shared world anthology, some author or editor comes up with a basic background, such as Thieves World, and then asks a dozen other authors to write stories sharing that background.  There is some obligatory overlap of characters and casual reference to events in other episodes, but overall each chapter is a distinct and separate performance by an individual. So it was with Half-Life. There was an experimental portal device, several silos, some train tunnels, a nuclear reactor, and endless miles of corridors and air ducts. They were great sets, but it was not at all clear what kind of continuing drama could ever unfold against them. Half-Life was still an anthology, when what Valve really wanted to create was something with the coherence and unity of a novel.

As a novelist myself, I hoped that I could provide some guidance to a team that was already well on the way to creating what had been from the beginning an ambitious game of great promise and epic scope. There was really no magic formula, and I had nothing but intuition and experience in a completely different medium to guide me. But that seemed appropriate, somehow, since Valve was doing something for which there were no previous examples. If we did it wrong, we would never know how near or far we had come to whatever the right thing was. But if we did things right, we would all know. And we would finally have our example.

Before coming to Valve, I had published half a dozen novels and scores of short stories. I was lumped in with the cyberpunks, and got to watch that little popular revolution from somewhere near the front row. I had written screenplays, dabbled in journalism, and lately I had started playing lots and lots of computer games. Playing them, yes, but also studying them. Trying to figure out what made them tick. I wasn’t exactly tired of writing prose, but I had been doing that and little else for more than 20 years, and my muse kept pointing me down other roads. I found myself making Quake maps for my own amusement. I found myself working for id, writing their company history, wishing I could be a part of it somehow.

The time I spent at id was a revelation to me. It was the first time I had ever seen a team of highly talented, extremely creative individuals at work on one project. I found it absolutely irresistible. I was also heartsick because there was obviously no place there for a writer. I had found the thing I wanted to do more than anything in the world right at that moment, which was to create these fantastic 3D worlds with John Carmack’s miraculous technology—and there was no place for me in it.

I guess it was right about then that I started scheming. I would either have to find a niche in that world, or carve one for myself.

I had originally come to id on assignment from Wired magazine, writing a cover story about the making of Quake. By coincidence, that magazine had just appeared on the newsstands when Gabe Newell and Mike Harrington were making their first trip down to id’s offices to discuss licensing the Quake engine for their start-up game company. Mike and Gabe were old associates of Michael Abrash, another ex-Microsoft employee and now one of id’s more high profile programmers. Abrash was the one person at id who proved endlessly willing and able to translate what John Carmack was up to into terms that I could understand and convey to the readership of Wired. We became friends, and the first time I heard about Valve, it was from Michael. I was agonizing because I had been offered a writing job at IonStorm, and I just couldn’t bring myself to move to Texas. Michael consoled me with vague hints of other possibilities, including one in the Seattle area. I knew they had licensed the Quake engine, which was the only technology that really interested me. I couldn’t understand why someone didn’t take the best engine they could get, namely Carmack’s, and use it to tell fantastic first-person 3D stories. Needless to say, when I finally got a look at what Valve was up to, I felt an immense cosmic click.

Writing, however noble an activity, is a solitary one—especially the writing of fiction, where you sit in front of a typewriter or computer screen and eat your own brain for as long as you can possibly stand the taste. I had collaborated a few times with friends, and those were great experiences. I had worked on a screenplay for a William Gibson novel, and it being Hollywood and all, that was a group effort in the sense that armed resistance is a group effort. But when I saw the group at id, I realized that I was aching to work with other people—people whose artistic visions and abilities would give me a daily jolt of awe and inspiration.

Valve is precisely that place. When I’m at work, I am engaged on almost every level, all the receptors are being stimulated. Every day I draw on the skills and intuitions I developed as a writer…and not only when I’m actually sitting down to work on a bit of dialog or some portion of a spec. An extremely limited portion of my time is actually spent in the act of writing; and yet I continually draw on what writing fiction has taught me to solve the problems that come up in the process of developing a game.

One of the best things about working alone is that you get to pay a lot of attention to all the subtleties of the creative process. There’s no one else to distract you. It’s like hiking in the mountains by yourself. You notice every step you take; every birdsong registers a bit more clearly because there is no one else there talking. Well, after writing a few novels with no other company than the characters you create, a writer starts to recognize certain milestones along the seemingly endless road between page one and THE END. Every novel I’ve ever written began with a jolt or even several jolts of inspiration. These overwhelming visions are usually so vivid as to be unforgettable, and yet somewhere along the way you inevitably lose sight of them. In the midst of creation you see nothing but chaos and dim glimmers of sense. You lose all perspective; you may even lose hope. It is very easy at this point to give up, and I have. However, if you keep on, you will learn that the floundering feeling of the middle game is temporary, and may even serve some purpose in causing you to question and test your assumptions. A book that makes it through the doubts and revisions of the middle stage is a stronger, more complex and curiously more stable book, I believe, than it would have been without the reevaluation. Still, it’s a hellish process, even when you’ve weathered it more than a couple times. You learn to keep doing the work. You keep on until you get to what you think is the end, so that you can finally realize it’s not the end at all but simply the next place you have to start from.

I am talking of novels, but the same applied to Half-Life. Maybe it applies to every work of real creativity.

It took me several months just to figure out what I was doing at Valve—and how I could possibly contribute. Our maps were a confusing collection of things named c1a1c, c2a3b, c3a2; so it was difficult for me to appear even remotely intelligent when people asked me things like, “What did you think of c2a4a?” By the time I had finally figured out the difference between c2a3 and c3a2, and was wondering how to pull the loose Half-Life story together into something fairly taut, Mike and Gabe decided that the entire game was in need of reworking. At Thanksgiving, just when we should have been bashing open headcrab pinatas, we took a crowbar to the game itself. The floor of the office was strewn with Half-Life components. We tore the game to pieces, trying to determine what worked, what might work someday, and what would probably never work given what we knew about our abilities. It was in some ways an extremely painful process—both because we knew that the game was going to slip far longer than anyone liked, and because it meant that a great deal of work was going to be lost and probably never seen again.

Now, I personally I enjoy revision, and the refinement of purpose that comes about during the rewrite process. But suggesting revisions to a collaborator is always much touchier than simply carving up one’s own work. Every piece of the game we discarded represented the work of some artist or programmer or level designer. I’ve been lucky enough to have had several excellent editors, and none of them has ever been shy about telling me when I wasn’t doing my very best work. But none of them has ever stopped at mere criticism either. A good editor tries to understand where things went wrong; a good editor can work miracles in getting a story back on track, by giving a few thoughtful comments to the writer. I tried to follow these examples when it came to working with level designers. We certainly had specific goals for the overall game, some things we expected Half-Life to deliver, but apart from that each designer has his own talents and interests. Wherever possible, the game benefitted from matching the designer’s strengths to the needs of the game. We have designers who excel at the broad plan, laying out huge complex areas in a few breathtaking strokes; and others who really go into high gear once the architecture has solidified, and they are able to set up finely balanced dramatic situations using monsters and triggers and scripted sequences. Half-Life benefitted immensely when we recognized and reorganized the workflow to take these differences into account. In the last few months of content creation, very few designers were solely responsible for maps they had originated.

As we moved beyond redesigning the game on paper, and into the mode of implementing our changes, I was asked to take on the role of lead for the level team. This was an ideal place from which to contribute further story elements to the game, and to make sure that all the various parts of the game interlocked as we knew they must. The level designers were so busy, nose to grindscreen, that they rarely had time to give in-depth consideration to what the other designers were up to. But I could look at everyone’s work on a daily basis. The designers were constantly inventing details that amazed me, things that were not in the spec but which belonged in the story. I had experienced this kind of spontaneous invention often enough in writing to feel that finally we were on the right track.

The crucial milestone for me was the completion of our first rough mock-up of the entire game—in essence our first rough draft. I knew that once we could move through the maps from beginning to end, without cheating, we would all discover a new vision of the game. Something closer to the final vision. This was something I believed very strongly, based on my experience as a writer. First drafts exist only to teach you what you really want to accomplish.

It was true enough in Half-Life’s case. Once we had finished up the first pass on the entire game, the process of adding scripted sequences and setting up dramatic gameplay suddenly became much easier. Designers were able to work on their levels with increased confidence that the work they were doing would actually end up in the game. Now, instead of cutting, we were able to get into the mode of improving and elaborating on existing material.

In a novel, it’s a common technique to take an isolated image and work variations on it elsewhere in the story. This creates a thread of meaning and metaphor which is much richer than if you leave only the one instance. I was really gratified to see something of the sort happening in Half-Life. One of the cleverer constructions in Xen, our alien dimension, is a series of puckered orifices which swallow you and spit you high into the sky for a lethal fall. These were picked up by one of the other designers and worked back into the terrestrial levels, giving the impression that the earthly plane is being infested by the alien one. Then a third designer did more benign earthly versions which fling you one or two stories high. So the puckers turned from a localized trap into an important gameplay element for a significant part of the game. This kind of borrowing and scattering of imagery is a function of revision, and to me one of the most effective things that happened spontaneously in the latter stages of Half-Life’s creation.

But was I, as the person in charge of the story, responsible for this level of invention?  Not at all. Did I encourage it?  Hell yes. Keeping up with the constant inventiveness of the level designers was a fulltime job. Because they were working on the details of the game on a daily basis, the story itself kept shifting from day to day.

Several times we had Valve-wide meetings where I would tell the entire story of the game as we understood it from beginning to end, so that everyone would be on the same page as we went forward. But invariably, as soon as those meetings were over, we’d find some reason to change the story yet again. We’d discard the ending, we’d eliminate a central element, or introduce a new one. It became impossible to keep everyone continually informed on the state of the story. Again, I was used to this kind of fluctuation; it more or less describes the writing of every novel I’ve worked on. I would have been happy enough to reassure everyone else that this state of perpetual disarray was normal, but no one seemed too bothered by it. And as we drew closer to our deadlines, everyone became so busy with their parts of the Half-Life universe that they rarely had time to think about the big picture. Everyone assumed that someone else was keeping track of the grand scheme. I was the only person who wasn’t allowed to assume that.

We tried out and discarded quite a few grand schemes. Some of you may remember, as I do, early talk about how there would be no bottlenecks in the game; how you would be able to run from one end to the other and all the way back again. This would have been a very easy feature to implement, given the nature of our transitions, but I was very relieved when we jettisoned this notion. Total freedom for the player would have meant a total loss of dramatic suspense. All narrative forms of drama, but especially horror, rely on pacing and rhythm. In horror timing is crucial. You have to set up your traps just so, and wait until your victim is precisely in position. There’s nothing worse than springing them a moment too soon or too late. This would have been virtually impossible to control in a nonlinear game.  would have been choosing to throw all suspense right out the window. We really wanted players to have an artfully structured experience, and time and trial have basically proven that the most satisfying narratives are linear.

I was also a champion of avoiding third person cut-scenes and cinematics. I came into Valve with a deep prejudice against cinematics. My feeling was that if we were going to do a first person game, we should stay in first person the entire time, and never break the narrative spell or jar the player out of the story for even a moment. Midway through the process, I became a reluctant advocate of the camera. Some of us were convinced that important scripted sequences would only work if we could lock the player into position. Our developers implemented an absolutely beautiful camera system which I’m sure the mod-authors will enjoy, but as it turned out, we only used it once, and when we did it was to simulate a first-person viewpoint and further deepen the spell we were trying to cast.  There were a number of critical scenes in the game which we couldn’t quite envision doing without a camera, one of the key scenes being the disaster that really sets the story into motion. We had recorded all the audio leading up to the disaster; the voices were wonderful, the test chamber was impressive, but the main event itself was still a mysterious void known simply as The Disaster. Due to time constraints, The Disaster had gone from being a developer’s problem to being a level designer’s problem.  Some of us spoke of a third person camera solution, but nothing was settled. I remember I went home on Friday and The Disaster was still an act of faith; someone else would make it happen. And someone else did. On Monday morning I came in and I could hear people all around me in the office playing the opening disaster over and over again. I held off as long as I could. When I watched it, my hair stood on end. It delivered the final blow to the third-person camera. Having seen that we could pull off the Disaster in first person, it was obvious that we should be able to do just about anything we could think of within the limits we had set for ourselves. So we went first person all the way.

The one noticeable casualty of the camera’s elimination was the absence of Gordon Freeman himself, our main character, as a visible presence in the game. Apart from the loading screen and the multiplay menus, and on the box itself, you never get to see Gordon Freeman. This introduced an interesting challenge. How could we make a real character out of someone you never saw, and who never uttered so much as one word? Well, we let the player solve that problem for himself. You start the game knowing very little about Gordon; but apparently everyone else knows who you are, and they fill you in on their expectations. In the gray zone between the player’s ignorance and the NPCs’ knowledge of Gordon, something rather interesting happens. Players create their own Gordon Freeman—a character they can identify with completely. There is nothing to jar you out of Gordon, once you’re in the game. He never says anything stupid that you would never say in a million years. He never does anything you wouldn’t do—since you are behind all his actions. He becomes a hollow receptacle into which every player pours himself.

This flexibility makes traditional character development a bit problematic. We create an experience for the player—a story that has a beginning, a middle and an end. We provide plenty of clues from which the player, if he chooses, can construct an explanation for what is really going on in the story. And by the end of the game, every player will have experienced some unique version of Half-Life which is meaningful to them in a different way than it is to anyone else.

Before beginning work on Half-Life, I encountered a lot of comments to the effect that a first person shooter didn’t need a story—that hardcore gamers didn’t want one, and that anything more complicated than a bunch of moving targets and some buttons to push would be lost on them. The reaction from our audience has largely contradicted this. If anything, what players seem to want is more story—but story that is integrated into the action, story that matters but doesn’t bog you down. It should go without saying that a boring story is a bad story, and that writing for a medium which is not considered “literary” is no excuse for creating boring or otherwise terrible stories. If gamers don’t like the bad stories they’ve been offered, the gamers themselves are hardly to blame.

Anyone writing for computer games should start off recognizing the principles and techniques of drama that give impact and meaning to traditional forms of art—start there, but by no means stop there. The great thing about working in this new medium is that tradition is not a narrow set of restrictions, but a proven springboard. With a solid foundation in traditional storycrafting, I believe we are in a better position to create totally new kinds of experiences which our audience—any audience—has never had before.

My ideas about game design are in a constant state of creative tension between tradition and experimentation. When I consider our main character, Gordon Freeman, as a conduit through which a player invents an identity for himself, I can’t think of a literary or cinematic equivalent. That right there excites me immeasureably. How often does a writer get to work with tools that are completely untried?  The early history of literary and cinema is already written. For any writer who wants to know what it feels like to pioneer—this is the place to be.