#! /usr/bin/env python
# encoding: utf-8
# a1batross, mittorn, 2018

from waflib import Utils
import os
 
def options(opt):
	# stub
	return

def configure(conf):
	# stub
	return

def build(bld):
	defines = []
	source = bld.path.parent.ant_glob([
		'pm_shared/*.c',
	])
	
	source += [
		'agrunt.cpp', 'airtank.cpp', 'aflock.cpp', 'animating.cpp', 'animation.cpp', 'apache.cpp', 
		'barnacle.cpp', 'barney.cpp', 'bigmomma.cpp', 'bloater.cpp', 'bmodels.cpp', 'bullsquid.cpp', 'buttons.cpp', 
		'cbase.cpp', 'client.cpp', 'combat.cpp', 'controller.cpp', 'crossbow.cpp', 'crowbar.cpp', 
		'defaultai.cpp', 'doors.cpp', 
		'effects.cpp', 'egon.cpp', 'explode.cpp', 
		'flyingmonster.cpp', 'func_break.cpp', 'func_tank.cpp', 
		'game.cpp', 'gamerules.cpp', 'gargantua.cpp', 'gauss.cpp', 'genericmonster.cpp', 'ggrenade.cpp', 'globals.cpp', 'glock.cpp', 'gman.cpp', 
		'h_ai.cpp', 'h_battery.cpp', 'h_cine.cpp', 'h_cycler.cpp', 'h_export.cpp', 'handgrenade.cpp', 'hassassin.cpp', 'headcrab.cpp', 
		'healthkit.cpp', 'hgrunt.cpp', 'hornet.cpp', 'hornetgun.cpp', 'houndeye.cpp', 
		'ichthyosaur.cpp', 'islave.cpp', 'items.cpp', 
		'leech.cpp', 'lights.cpp', 
		'maprules.cpp', 'monstermaker.cpp', 'monsters.cpp', 'monsterstate.cpp', 'mortar.cpp', 'mp5.cpp', 'multiplay_gamerules.cpp', 
		'nihilanth.cpp', 'nodes.cpp', 
		'observer.cpp', 'osprey.cpp', 
		'pathcorner.cpp', 'plane.cpp', 'plats.cpp', 'player.cpp', 'playermonster.cpp', 'python.cpp', 
		'rat.cpp', 'roach.cpp', 'rpg.cpp', 
		'satchel.cpp', 'schedule.cpp', 'scientist.cpp', 'scripted.cpp', 'shotgun.cpp', 'singleplay_gamerules.cpp', 'skill.cpp', 
		'sound.cpp', 'soundent.cpp', 'spectator.cpp', 'squadmonster.cpp', 'squeakgrenade.cpp', 'subs.cpp', 
		'talkmonster.cpp', 'teamplay_gamerules.cpp', 'tempmonster.cpp', 'tentacle.cpp', 
		'triggers.cpp', 'tripmine.cpp', 'turret.cpp', 
		'util.cpp', 
		'weapons.cpp', 'world.cpp', 'xen.cpp', 'zombie.cpp']
		
	if bld.env.VOICEMGR:
		source += bld.path.parent.ant_glob([
			'game_shared/voice_gamemgr.cpp',
		])
	else:
		defines += ['NO_VOICEGAMEMGR']

	includes = Utils.to_list('. wpn_shared ../common ../engine ../pm_shared ../game_shared ../public')

	libs = []

	if bld.env.DEST_OS not in ['android']:
		install_path = os.path.join(bld.env.GAMEDIR, bld.env.SERVER_DIR)
	else:
		install_path = bld.env.PREFIX

	bld.shlib(
		source   = source,
		target   = 'server',
		features = 'c cxx',
		includes = includes,
		defines  = defines,
		use      = libs,
		install_path = install_path,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx      = 2
	)
